from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a49602d4f1e5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First drop the foreign key constraint
    with op.batch_alter_table('file_metadata', schema=None) as batch_op:
        batch_op.drop_constraint('file_metadata_user_id_fkey', type_='foreignkey')
    
    with op.batch_alter_table('user_preferences', schema=None) as batch_op:
        batch_op.drop_constraint('user_preferences_user_id_fkey', type_='foreignkey')
    
    # Now, drop the tables (without cascade)
    op.drop_table('users')
    op.drop_table('user')

    # Alter user_preferences table to add new columns
    with op.batch_alter_table('user_preferences', schema=None) as batch_op:
        batch_op.add_column(sa.Column('chart_type', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('filters', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('last_updated', sa.DateTime(), nullable=True))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('preferred_visualization')
        batch_op.drop_column('last_login')
        batch_op.drop_column('filter_settings')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Recreate the foreign key constraints before adding back the tables
    with op.batch_alter_table('file_metadata', schema=None) as batch_op:
        batch_op.create_foreign_key('file_metadata_user_id_fkey', 'users', ['user_id'], ['id'])
    
    with op.batch_alter_table('user_preferences', schema=None) as batch_op:
        batch_op.create_foreign_key('user_preferences_user_id_fkey', 'users', ['user_id'], ['id'])
    
    # Add back the columns that were dropped
    with op.batch_alter_table('user_preferences', schema=None) as batch_op:
        batch_op.add_column(sa.Column('filter_settings', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('last_login', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('preferred_visualization', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('last_updated')
        batch_op.drop_column('filters')
        batch_op.drop_column('chart_type')

    # Recreate the 'users' and 'user' tables
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    sa.UniqueConstraint('username', name='users_username_key')
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('username', name='user_username_key')
    )
    # ### end Alembic commands ###
